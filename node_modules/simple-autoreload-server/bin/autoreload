#!/usr/bin/env node
/*
 * simple-autoreload-server v0.2.7 - 2017-09-07
 * <https://github.com/cytb/simple-autoreload-server>
 *
 * Copyright (c) 2017 cytb
 *
 * Licensed under the MIT License.
 */

(function(){
  var OptionHelper, Autoreload, pkg;
  OptionHelper = require('../lib/option').OptionHelper;
  Autoreload = require('../index.js');
  pkg = require('../package.json');
  (function(){
    var helper, ref$, parsed, unknown, prog, i$, len$, ref1$, label, short, type, help, def, nocli, param, shortp, defp, pre, that;
    helper = new OptionHelper;
    ref$ = helper.parse(), parsed = ref$.parsed, unknown = ref$.unknown;
    if (parsed.version) {
      console.log("" + pkg.name + " v" + pkg.version);
    }
    if (parsed.help) {
      prog = 'autoreload';
      console.log("Usage:\n  " + prog + " [options] [directory] [port]\n\nOptions:");
      for (i$ = 0, len$ = (ref$ = helper.optionList).length; i$ < len$; ++i$) {
        ref1$ = ref$[i$], label = ref1$.label, short = ref1$.short, type = ref1$.type, help = ref1$.help, def = ref1$.def, nocli = ref1$.nocli;
        if (nocli) {
          continue;
        }
        param = type !== 'boolean' ? " <" + type + ">" : "";
        shortp = short != null ? ",-" + short : "";
        defp = def != null ? " (default:'" + def + "')" : "";
        defp = type === ['string', 'regexp'] ? "\"" + defp + "\"" : defp;
        pre = "--" + label + shortp;
        pre = pre + ("                    ").slice(pre.length);
        console.log("  " + pre + " " + help + defp);
      }
      console.log("");
    }
    if (parsed.help || parsed.version) {
      process.exit();
    }
    if ((that = (ref$ = unknown.rest) != null ? ref$[0] : void 8) != null) {
      parsed.path = that;
    }
    if ((that = (ref1$ = unknown.rest) != null ? ref1$[1] : void 8) != null) {
      parsed.port = that * 1;
    }
    return Autoreload(parsed);
  })();
}).call(this);
